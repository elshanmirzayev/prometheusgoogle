name: Deploy Prometheus and Grafana

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --zone ${{ secrets.GKE_CLUSTER_ZONE }} --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Add Helm repositories
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo update

      - name: Deploy Prometheus
        run: |
          helm upgrade --install prometheus bitnami/prometheus \
            --set server.service.type=LoadBalancer \
            --namespace monitoring --create-namespace

      - name: Wait for Prometheus Deployment
        run: |
          kubectl rollout status deployment/prometheus-server -n monitoring --timeout=2m

      - name: Deploy Grafana
        run: |
          helm upgrade --install grafana bitnami/grafana \
            --set service.type=LoadBalancer \
            --set adminUser=admin \
            --set adminPassword=ZvtZwNRGsFU5nsLOz \
            --namespace monitoring --create-namespace

      - name: Wait for Grafana Deployment
        run: |
          kubectl rollout status deployment/grafana -n monitoring --timeout=2m

      - name: Expose Grafana
        run: |
          kubectl patch svc grafana -n monitoring --type='json' -p '[{"op":"replace","path":"/spec/type","value":"LoadBalancer"}]'

      - name: Delete Existing Grafana Admin Secret (if exists)
        run: |
          kubectl delete secret grafana-admin -n monitoring --ignore-not-found=true

      - name: Create Kubernetes Secret for Grafana Admin Password
        run: |
          kubectl create secret generic grafana-admin -n monitoring \
            --from-literal=GF_SECURITY_ADMIN_USER=admin \
            --from-literal=GF_SECURITY_ADMIN_PASSWORD=ZvtZwNRGsFU5nsLOz

      - name: Get Prometheus External IP
        run: |
          kubectl get svc prometheus-server -n monitoring

      - name: Get Grafana External IP
        id: grafana-ip
        run: |
          echo "::set-output name=ip::$(kubectl get svc grafana -o jsonpath='{.status.loadBalancer.ingress[0].ip}')"

      - name: Print Grafana IP
        run: |
          echo "Grafana can be accessed at http://${{ steps.grafana-ip.outputs.ip }}/"
